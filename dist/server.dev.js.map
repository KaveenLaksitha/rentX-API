{"version":3,"sources":["server.js"],"names":["express","require","app","mongoose","cors","bodyParser","config","empRoutes","port","URL","process","env","MONGODB_URL","use","json","connect","useCreateIndex","useNewUrlParser","useUnifiedTopology","useFindandModify","connection","once","console","log","vehicleRouter","listen","rentalRouter","deletedRentalsRouter","reservationController","deletedReservationRouter"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBK,MAAlB;;AAEA,IAAMC,SAAS,GAAGN,OAAO,CAAC,iCAAD,CAAzB;;AAEA,IAAMO,IAAI,GAAG,IAAb;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAxB;AAEAV,GAAG,CAACW,GAAJ,CAAQT,IAAI,EAAZ;AACAF,GAAG,CAACW,GAAJ,CAAQR,UAAU,CAACS,IAAX,EAAR;AAEAZ,GAAG,CAACW,GAAJ,CAAQ,MAAR,EAAgBN,SAAhB;AAEAJ,QAAQ,CAACY,OAAT,CAAiBN,GAAjB,EAAsB;AAClBO,EAAAA,cAAc,EAAE,IADE;AAElBC,EAAAA,eAAe,EAAE,IAFC;AAGlBC,EAAAA,kBAAkB,EAAE,IAHF;AAIlBC,EAAAA,gBAAgB,EAAE;AAJA,CAAtB;AAOA,IAAMC,UAAU,GAAGjB,QAAQ,CAACiB,UAA5B;AACAA,UAAU,CAACC,IAAX,CAAgB,MAAhB,EAAwB,YAAM;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,CAFD,E,CAIA;;AACA,IAAMC,aAAa,GAAGvB,OAAO,CAAC,mCAAD,CAA7B;;AACAC,GAAG,CAACW,GAAJ,CAAQ,UAAR,EAAoBW,aAApB;AAGAtB,GAAG,CAACuB,MAAJ,CAAWjB,IAAX,EAAiB,YAAM;AACnBc,EAAAA,OAAO,CAACC,GAAR,sCAA0Cf,IAA1C;AACH,CAFD,E,CAIA;;AACA,IAAMkB,YAAY,GAAGzB,OAAO,CAAC,kCAAD,CAA5B;;AACAC,GAAG,CAACW,GAAJ,CAAQ,SAAR,EAAmBa,YAAnB,E,CAAiC;;AAEjC,IAAMC,oBAAoB,GAAG1B,OAAO,CAAC,yCAAD,CAApC;;AACAC,GAAG,CAACW,GAAJ,CAAQ,iBAAR,EAA2Bc,oBAA3B;;AAGA,IAAMC,qBAAqB,GAAG3B,OAAO,CAAC,uCAAD,CAArC;;AACAC,GAAG,CAACW,GAAJ,CAAQ,eAAR,EAAyBe,qBAAzB;;AAEA,IAAMC,wBAAwB,GAAG5B,OAAO,CAAC,8CAAD,CAAxC;;AACAC,GAAG,CAACW,GAAJ,CAAQ,sBAAR,EAAgCgB,wBAAhC","sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\nconst mongoose = require(\"mongoose\");\r\nconst cors = require(\"cors\");\r\nconst bodyParser = require(\"body-parser\");\r\nrequire(\"dotenv\").config();\r\n\r\nconst empRoutes = require(\"./controller/employeeController\");\r\n\r\nconst port = 4000;\r\n\r\nconst URL = process.env.MONGODB_URL;\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\napp.use(\"/api\", empRoutes);\r\n\r\nmongoose.connect(URL, {\r\n    useCreateIndex: true,\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useFindandModify: false\r\n});\r\n\r\nconst connection = mongoose.connection;\r\nconnection.once(\"open\", () => {\r\n    console.log(\"Mongodb Connection success!\");\r\n})\r\n\r\n//Vehicle_Routes\r\nconst vehicleRouter = require(\"./controller/vehicleController.js\");\r\napp.use(\"/vehicle\", vehicleRouter);\r\n\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server Is Running on Port: ${port}`);\r\n});\r\n\r\n//hasani\r\nconst rentalRouter = require(\"./controller/rentalController.js\");\r\napp.use(\"/rental\", rentalRouter);//table name is created at this point\r\n\r\nconst deletedRentalsRouter = require(\"./controller/removedRentalController.js\");\r\napp.use(\"/deletedRentals\", deletedRentalsRouter);\r\n\r\n\r\nconst reservationController = require(\"./controller/reservationController.js\");\r\napp.use(\"/reservations\", reservationController);\r\n\r\nconst deletedReservationRouter = require(\"./controller/removedReservationController.js\");\r\napp.use(\"/deletedReservations\", deletedReservationRouter);\r\n"],"file":"server.dev.js"}