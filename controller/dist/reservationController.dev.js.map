{"version":3,"sources":["reservationController.js"],"names":["controller","require","Router","Reservation","uuidv4","v4","isMoment","route","post","req","res","reservationid","customername","body","contactnumber","Number","nic","customernic","customeraddress","packagename","eventtype","from","format","to","discount","advancedpayment","totalreservation","status","newReservation","save","then","send","message","err","error","get","find","reservation","json","console","log","RID","params","findOne","findOneAndDelete","put","penaltyDay","penaltyCharge","returnDay","updateReservation","findOneAndUpdate","updateReserve","count","result","val","trim","$regex","$options","rVal","module","exports"],"mappings":";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAnB;;AACA,IAAIC,WAAW,GAAGF,OAAO,CAAC,2BAAD,CAAzB;;eACoBA,OAAO,CAAC,MAAD,C;IAAjBG,M,YAAHC,E;;gBACYJ,OAAO,CAAC,SAAD,C;IAAlBC,M,aAAAA,M;;AACR,IAAMI,QAAQ,GAAIL,OAAO,CAAC,QAAD,CAAzB,C,CAGA;;;AACAD,UAAU,CAACO,KAAX,CAAiB,iBAAjB,EAAoCC,IAApC,CAAyC,UAACC,GAAD,EAAKC,GAAL,EAAW;AAChD,MAAMC,aAAa,GAAGP,MAAM,EAA5B;AACA,MAAMQ,YAAY,GAAGH,GAAG,CAACI,IAAJ,CAASD,YAA9B;AACA,MAAME,aAAa,GAAGC,MAAM,CAACN,GAAG,CAACI,IAAJ,CAASC,aAAV,CAA5B;AACA,MAAME,GAAG,GAAGP,GAAG,CAACI,IAAJ,CAASG,GAArB;AACA,MAAMC,WAAW,GAAGR,GAAG,CAACI,IAAJ,CAASI,WAA7B;AACA,MAAMC,eAAe,GAAGT,GAAG,CAACI,IAAJ,CAASK,eAAjC;AACA,MAAMC,WAAW,GAAGV,GAAG,CAACI,IAAJ,CAASM,WAA7B;AACA,MAAMC,SAAS,GAAGX,GAAG,CAACI,IAAJ,CAASO,SAA3B;AACA,MAAMC,IAAI,GAAGf,QAAQ,CAACG,GAAG,CAACI,IAAJ,CAASQ,IAAV,CAAR,CAAwBC,MAAxB,CAA+B,cAA/B,CAAb;AACA,MAAMC,EAAE,GAAGjB,QAAQ,CAACG,GAAG,CAACI,IAAJ,CAASU,EAAV,CAAR,CAAsBD,MAAtB,CAA6B,cAA7B,CAAX;AACA,MAAME,QAAQ,GAAGT,MAAM,CAACN,GAAG,CAACI,IAAJ,CAASW,QAAV,CAAvB;AACA,MAAMC,eAAe,GAAGV,MAAM,CAACN,GAAG,CAACI,IAAJ,CAASY,eAAV,CAA9B;AACA,MAAMC,gBAAgB,GAAGX,MAAM,CAACN,GAAG,CAACI,IAAJ,CAASa,gBAAV,CAA/B;AACA,MAAMC,MAAM,GAAGlB,GAAG,CAACI,IAAJ,CAASc,MAAxB,CAdgD,CAehD;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,IAAIzB,WAAJ,CAAgB;AACnCQ,IAAAA,aAAa,EAAbA,aADmC;AAEnCC,IAAAA,YAAY,EAAZA,YAFmC;AAGnCE,IAAAA,aAAa,EAAbA,aAHmC;AAInCE,IAAAA,GAAG,EAAHA,GAJmC;AAKnCC,IAAAA,WAAW,EAAXA,WALmC;AAMnCC,IAAAA,eAAe,EAAfA,eANmC;AAOnCC,IAAAA,WAAW,EAAXA,WAPmC;AAQnCC,IAAAA,SAAS,EAATA,SARmC;AASnCC,IAAAA,IAAI,EAAJA,IATmC;AAUnCE,IAAAA,EAAE,EAAFA,EAVmC;AAWnCC,IAAAA,QAAQ,EAARA,QAXmC;AAYnCC,IAAAA,eAAe,EAAfA,eAZmC;AAanCC,IAAAA,gBAAgB,EAAhBA,gBAbmC;AAcnCC,IAAAA,MAAM,EAANA,MAdmC,CAenC;AACA;AACA;;AAjBmC,GAAhB,CAAvB;AAqBAC,EAAAA,cAAc,CAACC,IAAf,GAAsBC,IAAtB,CAA2B,YAAI;AAC3BpB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAArB;AACH,GAFD,WAES,UAACC,GAAD,EAAO;AACZvB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAACJ,MAAAA,MAAM,EAAC,6BAAR;AAAsCO,MAAAA,KAAK,EAAED,GAAG,CAACD;AAAjD,KAArB;AACH,GAJD;AAKH,CA7CD,E,CA+CA;;AACAhC,UAAU,CAACO,KAAX,CAAiB,qBAAjB,EAAwC4B,GAAxC,CAA4C,UAAC1B,GAAD,EAAKC,GAAL,EAAY;AACpDP,EAAAA,WAAW,CAACiC,IAAZ,GAAmBN,IAAnB,CAAwB,UAACO,WAAD,EAAiB;AACrC3B,IAAAA,GAAG,CAAC4B,IAAJ,CAASD,WAAT;AACH,GAFD,WAES,UAACJ,GAAD,EAAO;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,GAJD;AAKH,CAND,E,CASA;;AACAjC,UAAU,CAACO,KAAX,CAAiB,sBAAjB,EAAyC4B,GAAzC,CAA6C,iBAAM1B,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAErC+B,UAAAA,GAFqC,GAE/BhC,GAAG,CAACiC,MAAJ,CAAWD,GAFoB;AAAA;AAAA,0CAIftC,WAAW,CAACwC,OAAZ,CAAoB;AAAChC,YAAAA,aAAa,EAAG8B;AAAjB,WAApB,EACzBX,IADyB,CACpB,UAACO,WAAD,EAAgB;AAClB,gBAAGA,WAAW,IAAI,IAAlB,EAAuB;AACnB3B,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAACJ,gBAAAA,MAAM,EAAE,qBAAT;AAAgCU,gBAAAA,WAAW,EAACA;AAA5C,eAArB,EADmB,CAEnB;AACH,aAHD,MAGK;AACD3B,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAACJ,gBAAAA,MAAM,EAAG,4BAAV;AAAwCO,gBAAAA,KAAK,EAACD,GAAG,CAACD;AAAlD,eAArB,EADC,CAED;AACH;AACJ,WATyB,WASjB,UAACC,GAAD,EAAS;AACdM,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACD,OAAhB;AACAtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAACJ,cAAAA,MAAM,EAAG,4BAAV;AAAwCO,cAAAA,KAAK,EAACD,GAAG,CAACD;AAAlD,aAArB;AACH,WAZyB,CAJe;;AAAA;AAInCK,UAAAA,WAJmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,E,CAoBA;;AACArC,UAAU,CAACO,KAAX,CAAiB,oBAAjB,EAAuCC,IAAvC,CAA4C,kBAAMC,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACpC+B,UAAAA,GADoC,GAC9BhC,GAAG,CAACI,IAAJ,CAASF,aADqB,EACN;;AAElC4B,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,GAA9B;AAHwC;AAAA,0CAKlCtC,WAAW,CAACyC,gBAAZ,CAA6B;AAACjC,YAAAA,aAAa,EAAG8B;AAAjB,WAA7B,EACLX,IADK,CACA,YAAK;AACHpB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEJ,cAAAA,MAAM,EAAE;AAAV,aAArB;AACH,WAHC,WAGO,YAAM;AACXY,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAvB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEJ,cAAAA,MAAM,EAAE,wCAAV;AAAoDO,cAAAA,KAAK,EAAED,GAAG,CAACD;AAA/D,aAArB;AACH,WANC,CALkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5C,E,CAcA;;AACAhC,UAAU,CAACO,KAAX,CAAiB,yBAAjB,EAA4CsC,GAA5C,CAAgD,kBAAMpC,GAAN,EAAUC,GAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxC+B,UAAAA,GADwC,GAClChC,GAAG,CAACiC,MAAJ,CAAWD,GADuB,EAG5C;;AAH4C,sBAwBxChC,GAAG,CAACI,IAxBoC,EAMxCF,aANwC,aAMxCA,aANwC,EAOxCC,YAPwC,aAOxCA,YAPwC,EAQxCE,aARwC,aAQxCA,aARwC,EASxCE,GATwC,aASxCA,GATwC,EAUxCC,WAVwC,aAUxCA,WAVwC,EAWxCC,eAXwC,aAWxCA,eAXwC,EAYxCC,WAZwC,aAYxCA,WAZwC,EAaxCC,SAbwC,aAaxCA,SAbwC,EAcxCC,IAdwC,aAcxCA,IAdwC,EAexCE,EAfwC,aAexCA,EAfwC,EAgBxCC,QAhBwC,aAgBxCA,QAhBwC,EAiBxCC,eAjBwC,aAiBxCA,eAjBwC,EAkBxCC,gBAlBwC,aAkBxCA,gBAlBwC,EAmBxCC,MAnBwC,aAmBxCA,MAnBwC,EAoBxCmB,UApBwC,aAoBxCA,UApBwC,EAqBxCC,aArBwC,aAqBxCA,aArBwC,EAsBxCC,SAtBwC,aAsBxCA,SAtBwC,EAwB/B;;AAEPC,UAAAA,iBA1BsC,GA0BnB;AACrB;AACAR,YAAAA,GAAG,EAAHA,GAFqB;AAGrB7B,YAAAA,YAAY,EAAZA,YAHqB;AAIrBE,YAAAA,aAAa,EAAbA,aAJqB;AAKrBE,YAAAA,GAAG,EAAHA,GALqB;AAMrBC,YAAAA,WAAW,EAAXA,WANqB;AAOrBC,YAAAA,eAAe,EAAfA,eAPqB;AAQrBC,YAAAA,WAAW,EAAXA,WARqB;AASrBC,YAAAA,SAAS,EAATA,SATqB;AAUrBC,YAAAA,IAAI,EAAJA,IAVqB;AAWrBE,YAAAA,EAAE,EAAFA,EAXqB;AAYrBC,YAAAA,QAAQ,EAARA,QAZqB;AAarBC,YAAAA,eAAe,EAAfA,eAbqB;AAcrBC,YAAAA,gBAAgB,EAAhBA,gBAdqB;AAerBC,YAAAA,MAAM,EAANA,MAfqB;AAgBrBmB,YAAAA,UAAU,EAAVA,UAhBqB;AAiBrBC,YAAAA,aAAa,EAAbA,aAjBqB;AAkBrBC,YAAAA,SAAS,EAATA;AAlBqB,WA1BmB,EA6C3C;AAEE;;AA/CyC;AAAA,0CAgDhB7C,WAAW,CAAC+C,gBAAZ,CAA6B;AAACvC,YAAAA,aAAa,EAAC8B;AAAf,WAA7B,EAAiDQ,iBAAjD,EAC3BnB,IAD2B,CACtB,YAAM;AACRpB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEJ,cAAAA,MAAM,EAAE;AAAV,aAArB,EADQ,CACsD;AACjE,WAH2B,WAGnB,UAACM,GAAD,EAAS;AACdM,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACAvB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEJ,cAAAA,MAAM,EAAE,uCAAV;AAAmDO,cAAAA,KAAK,EAAED,GAAG,CAACD;AAA9D,aAArB;AACH,WAN2B,CAhDgB;;AAAA;AAgDtCmB,UAAAA,aAhDsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhD,E,CA0DA;;AACAnD,UAAU,CAACO,KAAX,CAAiB,0BAAjB,EAA6C4B,GAA7C,CAAiD,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAE3DP,EAAAA,WAAW,CAACiC,IAAZ,CAAiB;AAAET,IAAAA,MAAM,EAAE;AAAV,GAAjB,EAAwCyB,KAAxC,GAAgDtB,IAAhD,CAAqD,UAACuB,MAAD,EAAY;AAC7D3C,IAAAA,GAAG,CAAC4B,IAAJ,CAASe,MAAT;AAEH,GAHD,WAGS,UAACpB,GAAD,EAAS;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,GALD;AAOH,CATD,E,CAWA;;AACAjC,UAAU,CAACO,KAAX,CAAiB,qCAAjB,EAAwD4B,GAAxD,CAA4D,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAEtE,MAAI4C,GAAG,GAAG7C,GAAG,CAACiC,MAAJ,CAAWzB,WAAX,CAAuBsC,IAAvB,EAAV,CAFsE,CAItE;;AACApD,EAAAA,WAAW,CAACiC,IAAZ,CAAiB;AAAEnB,IAAAA,WAAW,EAAE;AAAEuC,MAAAA,MAAM,EAAE,MAAMF,GAAN,GAAY,IAAtB;AAA4BG,MAAAA,QAAQ,EAAE;AAAtC;AAAf,GAAjB,EAA+E3B,IAA/E,CAAoF,UAACO,WAAD,EAAiB;AACjG3B,IAAAA,GAAG,CAAC4B,IAAJ,CAASD,WAAT;AAEH,GAHD,WAIW,UAACJ,GAAD,EAAS;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AAEH,GAPL;AASH,CAdD,E,CAgBA;;AACAjC,UAAU,CAACO,KAAX,CAAiB,kCAAjB,EAAqD4B,GAArD,CAAyD,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAEnE,MAAI4C,GAAG,GAAG7C,GAAG,CAACiC,MAAJ,CAAWgB,IAAX,CAAgBH,IAAhB,EAAV,CAFmE,CAInE;;AACApD,EAAAA,WAAW,CAACiC,IAAZ,CAAiB;AAAET,IAAAA,MAAM,EAAE;AAAE6B,MAAAA,MAAM,EAAE,OAAOF,GAAP,GAAa,IAAvB;AAA6BG,MAAAA,QAAQ,EAAE;AAAvC;AAAV,GAAjB,EAA2E3B,IAA3E,CAAgF,UAACO,WAAD,EAAiB;AAC7F3B,IAAAA,GAAG,CAAC4B,IAAJ,CAASD,WAAT;AAEH,GAHD,WAGS,UAACJ,GAAD,EAAS;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,GALD;AAOH,CAZD,E,CAeA;;AACAjC,UAAU,CAACO,KAAX,CAAiB,kCAAjB,EAAqD4B,GAArD,CAAyD,UAAC1B,GAAD,EAAMC,GAAN,EAAc;AAEnE,MAAI4C,GAAG,GAAG,WAAV,CAFmE,CAInE;;AACAnD,EAAAA,WAAW,CAACiC,IAAZ,CAAiB;AAAET,IAAAA,MAAM,EAAE;AAAE6B,MAAAA,MAAM,EAAE,OAAOF,GAAP,GAAa,IAAvB;AAA6BG,MAAAA,QAAQ,EAAE;AAAvC;AAAV,GAAjB,EAA2E3B,IAA3E,CAAgF,UAACO,WAAD,EAAiB;AAC7F3B,IAAAA,GAAG,CAAC4B,IAAJ,CAASD,WAAT;AAEH,GAHD,WAGS,UAACJ,GAAD,EAAS;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,GALD;AAOH,CAZD;AAeA0B,MAAM,CAACC,OAAP,GAAiB5D,UAAjB","sourcesContent":["const controller = require(\"express\").Router();\r\nlet Reservation = require(\"../model/reservationModel\");\r\nconst {v4:uuidv4} = require(\"uuid\");\r\nconst { Router } = require(\"express\");\r\nconst isMoment  = require(\"moment\");\r\n\r\n\r\n//insert data\r\ncontroller.route(\"/addReservation\").post((req,res)=>{\r\n    const reservationid = uuidv4();\r\n    const customername = req.body.customername;\r\n    const contactnumber = Number(req.body.contactnumber);\r\n    const nic = req.body.nic;\r\n    const customernic = req.body.customernic;\r\n    const customeraddress = req.body.customeraddress;\r\n    const packagename = req.body.packagename;\r\n    const eventtype = req.body.eventtype;\r\n    const from = isMoment(req.body.from).format('YYYY-MMMM-DD');\r\n    const to = isMoment(req.body.to).format('YYYY-MMMM-DD');\r\n    const discount = Number(req.body.discount);\r\n    const advancedpayment = Number(req.body.advancedpayment);\r\n    const totalreservation = Number(req.body.totalreservation);\r\n    const status = req.body.status;\r\n    //const penaltyDay = Number(req.body.penaltyDay);\r\n    //const penaltyCharge = Number(req.body.penaltyCharge);\r\n    //const returnDay = isMoment(req.body.from).format('MM-DD-YYYY');\r\n\r\n    const newReservation = new Reservation({\r\n        reservationid,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status\r\n        //penaltyDay,\r\n        //penaltyCharge,\r\n        //returnDay\r\n\r\n    })\r\n\r\n    newReservation.save().then(()=>{\r\n        res.status(200).send({message:\"Reservation insert successfully\"})\r\n    }).catch((err)=>{\r\n        res.status(300).send({status:\"Error Reservation insertion\",error: err.message});\r\n    })\r\n})\r\n\r\n//retrieve all order details\r\ncontroller.route(\"/displayReservation\").get((req,res) =>{\r\n    Reservation.find().then((reservation) => {\r\n        res.json(reservation)\r\n    }).catch((err)=>{\r\n        console.log(err);\r\n    })\r\n})\r\n\r\n\r\n//To retrieve the reservation details of a specific order \r\ncontroller.route(\"/getReservation/:RID\").get(async(req,res) => {\r\n\r\n    let RID = req.params.RID;\r\n\r\n    const reservation = await Reservation.findOne({reservationid : RID})\r\n    .then((reservation) =>{\r\n        if(reservation != null){\r\n            res.status(200).send({status :\"Reservation fetched\", reservation:reservation})\r\n            //res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n        }else{\r\n            res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n            //res.status(200).send({status :\"Reservation fetched\", reservation:reservation})\r\n        }       \r\n    }).catch((err) => {\r\n        console.log(err.message);\r\n        res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n    })\r\n\r\n})\r\n\r\n//to delete a specific reservation from database\r\ncontroller.route(\"/deleteReservation\").post(async(req,res)=>{\r\n    let RID = req.body.reservationid; //Reservation ID taken from frontend\r\n\r\n    console.log(\"reservation id\", RID)\r\n\r\n    await Reservation.findOneAndDelete({reservationid : RID})\r\n    .then(()=> {\r\n            res.status(200).send({ status: \"Reservation Record deleted\" });\r\n        }).catch(() => {\r\n            console.log(err);\r\n            res.status(500).send({ status: \"Error with deleting reservation record\", error: err.message });\r\n        })\r\n})\r\n\r\n//to update the reservation details\r\ncontroller.route(\"/updateReservation/:RID\").put(async(req,res) => {\r\n    let RID = req.params.RID;\r\n\r\n    //we have to fetch the new updating details coming from the front end here-new feature called d structure\r\n\r\n    const {\r\n        reservationid,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status,\r\n        penaltyDay,\r\n        penaltyCharge,\r\n        returnDay\r\n\r\n    } = req.body;//we call this as dStructure\r\n\r\n    const updateReservation ={\r\n        //reservationid,\r\n        RID,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status,\r\n        penaltyDay,\r\n        penaltyCharge,\r\n        returnDay\r\n    }//create a object containing the data that needs to be updated\r\n\r\n       //we have to pass the primary key and then value to be passed\r\n    const updateReserve = await Reservation.findOneAndUpdate({reservationid:RID},updateReservation)\r\n    .then(() => {\r\n        res.status(200).send({ status: \"Reservation Record updated\" })//sending details of the updated data back to front end\r\n    }).catch((err) => {\r\n        console.log(err);\r\n        res.status(500).send({ status: \"Server error Error with updating data\", error: err.message });\r\n    })\r\n})\r\n\r\n\r\n//To get the count of the pending records\r\ncontroller.route(\"/pendingReservationCount\").get((req, res) => {\r\n\r\n    Reservation.find({ status: /pending/ }).count().then((result) => {\r\n        res.json(result);\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n//this will serach for the list of orders by a particular customer nic given at searchbox\r\ncontroller.route(\"/searchReservationRecs/:customernic\").get((req, res) => {\r\n\r\n    let val = req.params.customernic.trim();\r\n\r\n    //{$regex: \"^\" + val + \".*\"}this will get to the value starting at the begining of list \r\n    Reservation.find({ customernic: { $regex: \"^\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation);\r\n\r\n    })\r\n        .catch((err) => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n})\r\n\r\n//to search for an rental record based on status\r\ncontroller.route(\"/searchReservationRecordsX/:rVal\").get((req, res) => {\r\n\r\n    let val = req.params.rVal.trim();\r\n\r\n    //{$regex: \".*\" + val + \".*\"}this will get to the value anywhere in the list not just begining\r\n    Reservation.find({ status: { $regex: \".*\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation)\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n\r\n//to search only pending rental record \r\ncontroller.route(\"/searchPendingReservationRecords\").get((req, res) => {\r\n\r\n    let val = \"completed\";\r\n\r\n    //{$regex: \".*\" + val + \".*\"}this will get to the value anywhere in the list not just begining\r\n    Reservation.find({ status: { $regex: \".*\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation)\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n\r\nmodule.exports = controller;"],"file":"reservationController.dev.js"}