{"version":3,"sources":["reservationController.js"],"names":["controller","require","Router","Reservation","route","post","req","res","reservationid","uuidv4","customername","body","contactnumber","Number","isMoment","nic","customernic","customeraddress","packagename","eventtype","format","discount","advancedpayment","status","totalreservation","newReservation","to","save","then","send","message","err","error","get","find","reservation","json","console","log","RID","regeneratorRuntime","async","_context","prev","next","awrap","findOne","sent","stop","_context2","findOneAndDelete","put","_req$body","from","penaltyDay","penaltyCharge","returnDay","updateReservation","_context3","findOneAndUpdate","params","count","result","val","trim","$regex","$options","rVal","module","exports"],"mappings":"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","file":"reservationController.min.js","sourcesContent":["const controller = require(\"express\").Router();\r\nlet Reservation = require(\"../model/reservationModel\");\r\nconst {v4:uuidv4} = require(\"uuid\");\r\nconst { Router } = require(\"express\");\r\nconst isMoment  = require(\"moment\");\r\n\r\n\r\n//insert data\r\ncontroller.route(\"/addReservation\").post((req,res)=>{\r\n    const reservationid = uuidv4();\r\n    const customername = req.body.customername;\r\n    const contactnumber = Number(req.body.contactnumber);\r\n    const nic = req.body.nic;\r\n    const customernic = req.body.customernic;\r\n    const customeraddress = req.body.customeraddress;\r\n    const packagename = req.body.packagename;\r\n    const eventtype = req.body.eventtype;\r\n    const from = isMoment(req.body.from).format('YYYY-MMMM-DD');\r\n    const to = isMoment(req.body.to).format('YYYY-MMMM-DD');\r\n    const discount = Number(req.body.discount);\r\n    const advancedpayment = Number(req.body.advancedpayment);\r\n    const totalreservation = Number(req.body.totalreservation);\r\n    const status = req.body.status;\r\n    //const penaltyDay = Number(req.body.penaltyDay);\r\n    //const penaltyCharge = Number(req.body.penaltyCharge);\r\n    //const returnDay = isMoment(req.body.from).format('MM-DD-YYYY');\r\n\r\n    const newReservation = new Reservation({\r\n        reservationid,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status\r\n        //penaltyDay,\r\n        //penaltyCharge,\r\n        //returnDay\r\n\r\n    })\r\n\r\n    newReservation.save().then(()=>{\r\n        res.status(200).send({message:\"Reservation insert successfully\"})\r\n    }).catch((err)=>{\r\n        res.status(300).send({status:\"Error Reservation insertion\",error: err.message});\r\n    })\r\n})\r\n\r\n//retrieve all order details\r\ncontroller.route(\"/displayReservation\").get((req,res) =>{\r\n    Reservation.find().then((reservation) => {\r\n        res.json(reservation)\r\n    }).catch((err)=>{\r\n        console.log(err);\r\n    })\r\n})\r\n\r\n\r\n//To retrieve the reservation details of a specific order \r\ncontroller.route(\"/getReservation/:RID\").get(async(req,res) => {\r\n\r\n    let RID = req.params.RID;\r\n\r\n    const reservation = await Reservation.findOne({reservationid : RID})\r\n    .then((reservation) =>{\r\n        if(reservation != null){\r\n            res.status(200).send({status :\"Reservation fetched\", reservation:reservation})\r\n            //res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n        }else{\r\n            res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n            //res.status(200).send({status :\"Reservation fetched\", reservation:reservation})\r\n        }       \r\n    }).catch((err) => {\r\n        console.log(err.message);\r\n        res.status(500).send({status : \"Error with get Reservation\", error:err.message});\r\n    })\r\n\r\n})\r\n\r\n//to delete a specific reservation from database\r\ncontroller.route(\"/deleteReservation\").post(async(req,res)=>{\r\n    let RID = req.body.reservationid; //Reservation ID taken from frontend\r\n\r\n    console.log(\"reservation id\", RID)\r\n\r\n    await Reservation.findOneAndDelete({reservationid : RID})\r\n    .then(()=> {\r\n            res.status(200).send({ status: \"Reservation Record deleted\" });\r\n        }).catch(() => {\r\n            console.log(err);\r\n            res.status(500).send({ status: \"Error with deleting reservation record\", error: err.message });\r\n        })\r\n})\r\n\r\n//to update the reservation details\r\ncontroller.route(\"/updateReservation/:RID\").put(async(req,res) => {\r\n    let RID = req.params.RID;\r\n\r\n    //we have to fetch the new updating details coming from the front end here-new feature called d structure\r\n\r\n    const {\r\n        reservationid,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status,\r\n        penaltyDay,\r\n        penaltyCharge,\r\n        returnDay\r\n\r\n    } = req.body;//we call this as dStructure\r\n\r\n    const updateReservation ={\r\n        //reservationid,\r\n        RID,\r\n        customername,\r\n        contactnumber,\r\n        nic,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status,\r\n        penaltyDay,\r\n        penaltyCharge,\r\n        returnDay\r\n    }//create a object containing the data that needs to be updated\r\n\r\n       //we have to pass the primary key and then value to be passed\r\n    const updateReserve = await Reservation.findOneAndUpdate({reservationid:RID},updateReservation)\r\n    .then(() => {\r\n        res.status(200).send({ status: \"Reservation Record updated\" })//sending details of the updated data back to front end\r\n    }).catch((err) => {\r\n        console.log(err);\r\n        res.status(500).send({ status: \"Server error Error with updating data\", error: err.message });\r\n    })\r\n})\r\n\r\n\r\n//To get the count of the pending records\r\ncontroller.route(\"/pendingReservationCount\").get((req, res) => {\r\n\r\n    Reservation.find({ status: /pending/ }).count().then((result) => {\r\n        res.json(result);\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n//this will serach for the list of orders by a particular customer nic given at searchbox\r\ncontroller.route(\"/searchReservationRecs/:customernic\").get((req, res) => {\r\n\r\n    let val = req.params.customernic.trim();\r\n\r\n    //{$regex: \"^\" + val + \".*\"}this will get to the value starting at the begining of list \r\n    Reservation.find({ customernic: { $regex: \"^\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation);\r\n\r\n    })\r\n        .catch((err) => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n})\r\n\r\n//to search for an rental record based on status\r\ncontroller.route(\"/searchReservationRecordsX/:rVal\").get((req, res) => {\r\n\r\n    let val = req.params.rVal.trim();\r\n\r\n    //{$regex: \".*\" + val + \".*\"}this will get to the value anywhere in the list not just begining\r\n    Reservation.find({ status: { $regex: \".*\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation)\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n\r\n//to search only pending rental record \r\ncontroller.route(\"/searchPendingReservationRecords\").get((req, res) => {\r\n\r\n    let val = \"completed\";\r\n\r\n    //{$regex: \".*\" + val + \".*\"}this will get to the value anywhere in the list not just begining\r\n    Reservation.find({ status: { $regex: \".*\" + val + \".*\", $options: 'i' } }).then((reservation) => {\r\n        res.json(reservation)\r\n\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n})\r\n\r\n\r\nmodule.exports = controller;"]}