{"version":3,"sources":["removedReservationController.js"],"names":["controller","require","Router","isMoment","RemovedReservation","post","req","res","console","log","body","data","reservationid","customername","contactnumber","Number","customernic","customeraddress","packagename","eventtype","discount","advancedpayment","from","format","totalreservation","penaltyDay","status","penaltyCharge","returnDay","newRemovedReservationRecords","to","save","then","send","message","err","error","route","get","find","removedReservation","reservations","json","module","exports"],"mappings":"aAAA,IAAMA,WAAaC,QAAQ,WAAWC,SAChCC,SAAWF,QAAQ,UADnBD,mBAAqBC,QAAA,oCAE3BD,WAAII,MAAAA,0BAA6BC,KAAA,SAAAC,EAAAC,GAK7BC,QAAQC,IAAI,KAAKH,EAAII,KAAKC,MAC1B,IAAMC,EAAiBN,EAAII,KAAKC,KAAKC,cAF/BC,EAAOP,EAAAI,KAAAC,KAAAE,aACLJ,EAAaC,OAArBJ,EAAAI,KAAAC,KAAAG,eACMF,EAAiBN,EAAII,KAAKC,KAAKC,YAC/BC,EAAmBH,EAAKC,KAAKE,KAAAA,gBAC7BC,EAAgBC,EAAML,KAAKA,KAAKC,YAChCK,EAAcV,EAAII,KAAKC,KAAKK,UAC5BC,EAAAA,SAAkBX,EAAII,KAAKC,KAAKM,MAAAA,OAAtC,gBACMC,EAAAA,SAAkBR,EAAJA,KAAAC,KAAcO,IAAAA,OAAlC,gBACMC,EAAeJ,OAAMJ,EAAKQ,KAAAA,KAAhCC,UACUC,EAAgBX,OAAJJ,EAAcgB,KAAMC,KAAOF,iBACzCG,EAAqBb,OAAVL,EAAmBiB,KAAOZ,KAAAa,kBACvCJ,EAAWL,EAAML,KAAKA,KAAKC,OAC3BU,EAAeN,OAAST,EAAII,KAAHC,KAAAc,YACzBD,EAAmBT,OAAOT,EAAII,KAAKC,KAAKa,eACxCE,EAAahB,SAAUgB,EAA7BhB,KAAAC,KAAAW,MAAAC,OAAA,gBAEMI,EAAgChB,IAAKgB,mBAA3C,CACMC,cAAAA,EAEAC,aAAAA,EACFjB,cAAAA,EACAC,YAAAA,EACAC,gBAAAA,EACAE,YAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,GAAAA,EACIC,SAAAA,EACJU,gBAAAA,EACAV,iBAAAA,EACAC,OAAAA,EACAG,WAAAA,EACAE,cAAAA,EACAD,UAAAA,IAMJjB,QAAQC,IAAI,eAAeoB,GAGvBrB,EAAAuB,OAAAC,KAAA,WACIN,QAAOjB,IAAKwB,cAAMC,EAAAA,OAAQ,KAAAD,KAAA,CAAAC,QAAA,sCAD9B1B,MADJ,SAIS2B,GACL3B,QAAYC,IAAA,iBAAZ0B,GACIT,EAAAA,OAAJ,KAAAO,KAAqB,CAAAP,OAAA,8BAAAU,MAAAD,EAAAD,cAE5BlC,WAEDqC,MAAA,8BAAAC,IAAA,SAAAhC,EAAAC,GAEIH,mBAAmBmC,OAAOP,KAAK,SAACQ,GADpCxC,EAAWqC,KAAMI,gBACb,MAAArC,SAAAA,GACQsC,QAAKD,IAAAA,OAIhBE,OANDC,QAAA5C","file":"removedReservationController.min.js","sourcesContent":["const controller = require(\"express\").Router();\r\nconst isMoment = require('moment');\r\nlet RemovedReservation = require(\"../model/RemovedReservationModel\");\r\n\r\n\r\n//insert data\r\ncontroller.route(\"/addRemovedReservation\").post((req,res)=>{\r\n    console.log(\"hi\",req.body.data);\r\n    const reservationid =  req.body.data.reservationid;\r\n    const customername = req.body.data.customername;\r\n    const contactnumber = Number(req.body.data.contactnumber);\r\n    const customernic = req.body.data.customernic;\r\n    const customeraddress = req.body.data.customeraddress;\r\n    const packagename = req.body.data.packagename;\r\n    const eventtype = req.body.data.eventtype;\r\n    const from = isMoment(req.body.data.from).format('YYYY-MMMM-DD');\r\n    const to = isMoment(req.body.data.to).format('YYYY-MMMM-DD');\r\n    const discount = Number(req.body.data.discount);\r\n    const advancedpayment = Number(req.body.data.advancedpayment);\r\n    const totalreservation = Number(req.body.data.totalreservation);\r\n    const status = req.body.data.status;\r\n    const penaltyDay = Number(req.body.data.penaltyDay);\r\n    const penaltyCharge = Number(req.body.data.penaltyCharge);\r\n    const returnDay = isMoment(req.body.data.from).format('YYYY-MMMM-DD');\r\n\r\n    const newRemovedReservationRecords = new RemovedReservation({\r\n        reservationid,\r\n        customername,\r\n        contactnumber,\r\n        customernic,\r\n        customeraddress,\r\n        packagename,\r\n        eventtype,\r\n        from,\r\n        to,\r\n        discount,\r\n        advancedpayment,\r\n        totalreservation,\r\n        status,\r\n        penaltyDay,\r\n        penaltyCharge,\r\n        returnDay\r\n\r\n    })\r\n\r\n    console.log(\"dataaaaaaaaa\",newRemovedReservationRecords)\r\n\r\n    newRemovedReservationRecords.save().then(()=>{\r\n        console.log(\"data saved\")\r\n        res.status(200).send({message:\"Reservation insert successfully\"})\r\n        \r\n    }).catch((err)=>{\r\n        console.log(\"data not saved\", err)\r\n        res.status(300).send({status:\"Error Reservation insertion\",error: err.message});\r\n    })\r\n})\r\n\r\n//retrieve all order details\r\ncontroller.route(\"/displayRemovedReservation\").get((req,res) =>{\r\n    RemovedReservation.find().then((removedReservation) => {\r\n        res.json(reservations)\r\n    }).catch((err)=>{\r\n        console.log(err);\r\n    })\r\n})\r\n\r\nmodule.exports = controller;\r\n\r\n"]}